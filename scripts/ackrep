#!/usr/bin/env ruby
require 'optparse'
require 'pp'

class String
  # colorization
  def colorize(color_code)
    "\e[#{color_code}m#{self}\e[0m"
  end

  def red
    colorize(31)
  end
end

# This hash will hold all of the options
# parsed from the command-line by
# OptionParser.
options = {}

optparse = OptionParser.new do|opts|

  # This displays the help screen, all programs are
  # assumed to have this option.
  opts.on( '-h', '--help', 'Display this screen' ) do
    puts opts
    exit
  end
end

# Parse the command-line.
optparse.parse!
path = ARGV[1] || '.'

# remove quotes if present
pattern = ARGV[0].to_s
if pattern.size > 2
    if (pattern.start_with?('"') && pattern.end_with?('"')) ||
        ( pattern.start_with?("'") && pattern.end_with?("'") )
        pattern = [1..-2]
    end
end

# Execute ack to show what will be affected
result = `ack -l -Q #{pattern} #{path}`.to_s

unless result == ''
    puts "Files matching pattern: '#{pattern.red}'"
    puts result.red
else
    puts "Nothing matched pattern: '#{pattern.red}'"
end

# Print command that will carry out changes
puts "Run the following command to recursively replace values matching: '#{pattern.red}'"
puts  "ack -Q --print0 -l '#{pattern}' #{path} | xargs -0 sed -i 's/#{pattern}/#{pattern}/g'"

